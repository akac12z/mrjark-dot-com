---
import { HEADER_LINKS } from "@/global/headerLinks";
import { Image } from "astro:assets";
import TestingNavLinks from "./TestingNavLinks.astro";
import NavbarMobileMenu from "./NavbarMobileMenu.astro";

const currentPath = Astro.url.pathname;
---

<header class="flex items-center justify-between">
  <nav class="flex justify-between items-center mx-auto w-full my-2">
    <a href="/" class="flex-shrink-0">
      <Image src="/favicon.svg" width={20} height={20} alt=`mrjark logo` />
    </a>
    <NavbarMobileMenu />
    <!-- <section class="xs:hidden">
      <button
        class="mobile-nav-toggle"
        aria-controls="navigation-mobile-menu"
        aria-expanded="false"
        ><svg
          class="h-6 w-6"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="3"
            d="M4 6h16M4 12h16M4 18h16"></path>
        </svg></button
      >

      <ul
        data-visible="false"
        id="navigation-mobile-menu"
        class="navigation-mobile-menu"
      >
        {
          HEADER_LINKS.map(({ customClasses, href, text }) => (
            <TestingNavLinks
              href={href}
              text={text}
              currentPath={currentPath}
              customClasses={customClasses}
            />
          ))
        }
      </ul>
    </section> -->

    <section class="hidden xs:flex">
      <ul class="navigation-desktop-menu">
        {
          HEADER_LINKS.map(({ customClasses, href, text }) => (
            <TestingNavLinks
              href={href}
              text={text}
              currentPath={currentPath}
              customClasses={customClasses}
            />
          ))
        }
      </ul>
    </section>
  </nav>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const primaryNav = document.querySelector(
      ".navigation-mobile-menu"
    ) as HTMLUListElement;
    const navToggle = document.querySelector(
      ".mobile-nav-toggle"
    ) as HTMLButtonElement;

    const toggleMenu = () => {
      const visibility = primaryNav.getAttribute("data-visible");
      if (visibility === "false") {
        primaryNav.setAttribute("data-visible", "true");
        navToggle.setAttribute("aria-expanded", "true");
      } else {
        primaryNav.setAttribute("data-visible", "false");
        navToggle.setAttribute("aria-expanded", "false");
      }
    };

    const closeMenu = () => {
      primaryNav.setAttribute("data-visible", "false");
      navToggle.setAttribute("aria-expanded", "false");
    };

    navToggle.addEventListener("click", (e) => {
      e.stopPropagation();
      toggleMenu();
    });

    document.addEventListener("click", (e) => {
      const isClickInsideMenu = primaryNav.contains(e.target as Node);
      const isClickInsideButton = navToggle.contains(e.target as Node);
      if (!isClickInsideMenu && !isClickInsideButton) {
        closeMenu();
      }
    });
  });
</script>
