---
import { getCollection, type CollectionEntry } from "astro:content";

import BookScore from "./BookScore.astro";
import BookCover from "./BookCover.astro";

interface Props {
  entry: CollectionEntry<"library">;
}

export async function getStaticPaths() {
  const library = await getCollection("library");

  return library.map((entry) => ({
    params: { id: entry.id },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { data, id } = entry;
const { quote, title, readingTime, backlog } = data;
---

<!-- ---
import { getCollection, type CollectionEntry } from "astro:content";

import BookScore from "./BookScore.astro";
import BookCover from "./BookCover.astro";

interface Props {
  entry: CollectionEntry<"library">;
}

export async function getStaticPaths() {
  const library = await getCollection("library");

  return library.map((entry) => ({
    params: { id: entry.id },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { data, id } = entry;
const { quote, title, readingTime, backlog } = data;
---

<section class="pb-10 flex flex-col justify-center items-center mx-auto">
  <div class="flex flex-row w-full sm:px-10 mx-auto">
    {
      backlog === "upload" ? (
        <a
          href={`/biblioteca/${id}`}
          class="min-w-28 xs:min-w-36 mx-auto h-fit w-fit rounded"
        >
          <BookCover
            customClasses="md:max-w-36"
            entry={entry}
            transition:name={`${id}-bookCover`}
          />
        </a>
        <section class="flex flex-col items-start ml-5 gap-y-2">
          <h2>
            <a href={`/biblioteca/${id}`}>{title}</a>
          </h2>
          <BookScore entry={entry} />
          <div class="flex flex-col gap-y-2 text-xs text-mr-text-relax">
            <span>Léelo en {readingTime}min</span>
          </div>
          <p>
            "{quote}"
          </p>
        </section>
      ) : (
          <span
            class="min-w-28 xs:min-w-36 w-fit h-fit mx-auto rounded"
          >
            <BookCover
              customClasses="xs:min-w-32 bg-white opacity-50 backdrop-grayscale"
              entry={entry}
              transition:name={`${id}-bookCover`}
            />
          </span>
          <section class="flex flex-col items-start ml-5 gap-y-2">
            <h2 class="text-neutral-500">
              {title}
            </h2>
            <p class="text-neutral-500">
              "El resumen e insights de este libro aún no los tengo listos. Aún estoy leyéndolo o en proceso de subirlo. <span class="text-mr-neon-orange/50">Sorry!</span>"
            </p>
        </section>
      )
    }
  </div>
</section> -->
<section class="pb-10 flex flex-col justify-center items-center mx-auto">
  <div
    class="relative flex flex-row w-full sm:px-10 mx-auto p-4 rounded-lg transition-opacity"
  >
    {
      backlog === "upload" ? (
        <a
          href={`/biblioteca/${id}`}
          class="min-w-28 xs:min-w-36 mx-auto h-fit w-fit rounded"
        >
          <BookCover
            customClasses="md:max-w-36"
            entry={entry}
            transition:name={`${id}-bookCover`}
          />
        </a>
      ) : (
        <div class="min-w-28 xs:min-w-36 w-fit h-fit mx-auto rounded ">
          <BookCover
            customClasses="xs:min-w-32 bg-white opacity-50 backdrop-grayscale"
            entry={entry}
            transition:name={`${id}-bookCover`}
          />
        </div>
      )
    }

    <section class="flex flex-col items-start ml-5 gap-y-2">
      <h2 class={`${backlog === "upload" ? "" : "text-neutral-500"}`}>
        {title}
      </h2>
      {
        backlog === "upload" ? (
          <>
            <BookScore entry={entry} />
            <div class="flex flex-col gap-y-2 text-xs text-mr-text-relax">
              <span>Léelo en {readingTime}min</span>
            </div>
            <p>"{quote}"</p>
          </>
        ) : (
          <p class="text-neutral-500">
            "El resumen e insights de este libro aún no los tengo listos. Aún
            estoy leyéndolo o en proceso de subirlo.{" "}
            <span class="text-mr-neon-red/50">Sorry!</span>"
          </p>
        )
      }
    </section>

    <!-- Tarjeta "No disponible por ahora" que cubre TODO -->
    {
      backlog !== "upload" && (
        <div class="absolute inset-0 flex items-center justify-center ">
          <span class="text-mr-text-headers bg-mr-bg/60 border-2 border-mr-neon-red px-2 py-1 rounded-lg shadow-md">
            ¡No disponible por ahora!
          </span>
        </div>
      )
    }
  </div>
</section>
