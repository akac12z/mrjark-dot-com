---
interface Props {
  category: string[];
}

// Categorías disponibles
const categories = [
  { key: "speed", color: "blue" },
  { key: "judgment", color: "green" },
  { key: "memory", color: "purple" },
  { key: "perception", color: "yellow" },
  { key: "context", color: "red" },
];

// Función para encontrar clases según la categoría
function getCategoryClass(category: string) {
  const foundCategory = categories.find(
    (cat) => cat.key === category.toLowerCase()
  );
  if (foundCategory) {
    return `border text-${foundCategory.color}-500 border-${foundCategory.color}-500 bg-${foundCategory.color}-100`;
  }
  return "text-gray-500 border-gray-500 bg-gray-100/10"; // Fallback
}

const { category } = Astro.props;
---

<div class="flex gap-2">
  {
    category.map((c) => (
      <span
        class={` capitalize px-1 py-0.5 text-xxs rounded-lg w-fit font-museo_moderno tracking-widest ${getCategoryClass(
          c
        )}`}
      >
        {c}
      </span>
    ))
  }
</div>
