<!-- ---
// ImageComponent.astro
import { getImage, Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";

interface Props<T> {
  entry: CollectionEntry<T>; // Usamos un gen√©rico en lugar de `any`
}

const { entry }: = Astro.props;
const { data } = entry;
const { cover } = data;
---

<Image
  src={cover.src}
  alt={cover.alt}
  width={cover.width}
  height={cover.height}
  class="inline-block aspect-video w-full h-full overflow-hidden object-cover object-center rounded-lg"
/> --><!-- ---
import { Image } from "astro:assets";

interface Props {
  name: string;
  // üëÜüèΩ es √∫nicamente para los view transitions pero es la √∫nica forma de que funcione. Creo que es porque como lo estaba haciendo con el slug, en una ruta din√°mica puede que en ocasiones el slug fuera "essay/bias/{bias-slug}" y en otras puede que sea "{bias-slug}". Seguramente haya formas de mejorarlo con un ID pero por ahora se ha solucionado 02/11/24
  src: string;
  alt: string;
  width: number;
  height: number;
}

const { alt, height, src, width, name } = Astro.props;
---

<Image
  src={src}
  width={width}
  height={height}
  alt={alt}
  class="inline-block aspect-video w-full h-full overflow-hidden object-cover object-center rounded-lg"
  transition:name={`${name}-image`}
/> -->
