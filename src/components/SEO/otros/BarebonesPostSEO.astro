---
import { SITE_DEFAULT_CONFIG } from "@/global/siteInfo";
import { type CollectionEntry } from "astro:content";

const { entry } = Astro.props;
const bias = entry as CollectionEntry<"bias">;

const postTitle = bias.data.name || SITE_DEFAULT_CONFIG.title;

const postDescription =
  bias.data.description || SITE_DEFAULT_CONFIG.description;

const ogImage = new URL("./og-image.png", Astro.site);
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<title>{`${postTitle} | ${SITE_DEFAULT_CONFIG.title}`}</title>
<meta name="title" content={`${postTitle} | ${SITE_DEFAULT_CONFIG.title}`} />
<meta name="description" content={postDescription} />

<meta property="og:url" content={canonicalURL} />
<link rel="canonical" href={canonicalURL} />
<meta property="og:title" content={postTitle} />
<meta property="og:description" content={postDescription} />

<meta
  property="og:image"
  content={`${SITE_DEFAULT_CONFIG.url}${bias.data.cover.src.src}` || ogImage}
/>
<meta property="og:image:alt" content={postTitle} />
<meta property="og:type" content="website" />
<meta property="og:locale" content={SITE_DEFAULT_CONFIG.location} />
<meta property="og:site_name" content={SITE_DEFAULT_CONFIG.title} />
{
  bias.data.keywords &&
    bias.data.keywords.map((keyword: string) => {
      return <meta property="article:tag" content={keyword} />;
    })
}

<meta name="twitter:title" content={postTitle} />
<meta name="twitter:description" content={postDescription} />
<meta
  property="twitter:image"
  content={`${SITE_DEFAULT_CONFIG.url}${bias.data.cover.src.src}` || ogImage}
/>
<meta name="twitter:image:alt" content={postTitle} />
<meta name="twitter:card" content="summary_large_image" />
<!--  -->
